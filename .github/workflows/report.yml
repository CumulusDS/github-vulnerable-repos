name: Vulerability Report
on:
  push:
  schedule:
    - cron: '0 9 * * *'
jobs:
  report:
    name: Run Report
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install NPM credentials
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
      - name: Get yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install NPM Packages
        run: yarn install --frozen-lockfile
      - name: build
        run: yarn build
      - name: get vulnerable repos
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          echo "::group::Get vulnerable repos"
          yarn repos | sed -e '1,2d' -e '$d' -e '$d' > vulnerabilities.txt
          echo "::endgroup::"
          echo "::group::debug output"
          cat vulnerabilities.txt
          echo "::endgroup::"
          echo "::group::link to repo"
          sed -i -e 's/^\([a-z0-9-]\{4,\}\)$/[\1]\(https\:\/\/github.com\/CumulusDS\/\1\/security\/dependabot\)/gm' vulnerabilities.txt
          cat vulnerabilities.txt
          echo "::endgroup::"
          sed -i -e 's/\(-\([a-zA-Z0-9]\)\w*\)\(-\([a-zA-Z0-9]\)\w*\)\(\s*\)\([A-Z]\{3,8\}\)\(\s\)\(.*\)$/\1\3\5 Level\: **\6**\n```\n\8\n```\n\/gm' vulnerabilities.txt
          cat vulnerabilities.txt
          echo "::group::move description"

          echo "::endgroup::"

          echo "::group::link to advisory"
          sed -i -e 's/\t\(GHSA-\([a-zA-Z0-9]\)\w*-\([a-zA-Z0-9]\)\w*-\([a-zA-Z0-9]\)\w*\)/- [\1]\(https\:\/\/github.com\/advisories\/\1\)/g' vulnerabilities.txt
          cat vulnerabilities.txt
          echo "::endgroup::"
          echo "::group::set env"
          echo "VULNERABILITIES<<EOF" >> $GITHUB_ENV
          cat vulnerabilities.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "::endgroup::"
          rm vulnerabilities.txt
      - name: slackify vulnerabilities
        id: slackify
        uses: LoveToKnow/slackify-markdown-action@v1.0.0
        if: always()
        with:
          text: ${{ env.VULNERABILITIES }}
      - name: Notify Slack
        id: notify
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_CHANNEL: devops-master
          SLACK_USERNAME: "Vulnerability Reporter"
          SLACK_MSG_AUTHOR: ""
          SLACK_ICON: "https://www.checkpoint.com/wp-content/uploads/what-is-security-management-architecture-icon.jpg"
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_COLOR: "#2D50FF"
          MSG_MINIMAL: true
          SLACK_TITLE: "Open Repository Vulnerabilities"
          SLACK_MESSAGE: |
            ${{ steps.slackify.outputs.text }}
          SLACK_FOOTER: ""
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

